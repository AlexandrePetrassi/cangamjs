Rogue
  Support for Stealing from events.
    It must use the shop API. (Using comment calls to intercept shopcalls)
    Limited shop inventory.
	Stealing is activated while sneaking.
  Support for Lockpicking.
  Cache isThief result.
  Support for sneaking.

Expertise
  CHECK IF ITS POSSIBLE TO USE THE DELEGATE CLASS FROM STDLIB

  Expertise for enemies
    Create a lunatic notetag for defining the initial expertise
    party expertise bonuses for troops (Scoping party bonuses to troops)
	Create a troop specific lunatic notetag for overriding initial expertise for enemies
  ( ) Split In Modules
    (x) Expertise Core
	  (x) Expertise Bonus
	  (x) Expertise Menu
	  ( ) Expertise Inspector (in expertise entry)
	  ( ) Item Bonus Inspector (in item entry)
	  ( ) Skill Bonus Inspector (in skill entry)
	  ( ) Status Effects Bonus Inspector (in Status entry)
		( ) Stat Bonus Inspector (in Status entry)
	  ( ) Add toogle for each inspector
		( ) Enhanced Status entry with views for each Menu (Expertise, Item, Skill and Status inspection)
  ( ) Support for arbitrary views (Skills, Classes, Attributes).
    ( ) Add expertise points exclusive for each view.
    ( ) Add classes as arbitrary views
    ( ) Add Growth formula to classes
	( ) Add a connection between params and skills for stat allocation

    get log exc
    (x) ( ) ( ) CCPet.requires(Script)
    (x) (x) ( ) Find.actor(id)
    (x) (x) ( ) Find.member(id)
    ( ) ( ) ( ) Find.class(id)
    ( ) ( ) ( ) Find.skill(id)
    ( ) ( ) ( ) Find.item(id)
    ( ) ( ) ( ) Find.weapon(id)
    ( ) ( ) ( ) Find.armor(id)
    ( ) ( ) ( ) Find.enemy(id)
    ( ) ( ) ( ) Find.troop(id)

ScopeChange
  FF-like all/single change by going full left

  Acyt   Woot   Yrom  Swamp
  Pyra   Rokk   Liyt  Mountain
  Bout   Rayn   Tarc  Ocean
  Cout   Wimt   Ã†tar  Sky
  Desert Forest City